plugins {
    id 'net.researchgate.release' version '2.6.0'
    id 'io.codearte.nexus-staging' version '0.9.0'
    id 'com.gradle.plugin-publish' version '0.9.7'
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group 'io.saagie'
version version
description 'Gradle plugin to automatically upload archives into a specified platform and create or update jobs'

repositories {
    jcenter()
}

dependencies {
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logback

    compile gradleApi()
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttp

    testCompile group: 'junit', name: 'junit', version: jUnit
}

configurations {
    pom
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives jar, sourceJar, javadocJar
}

signing {
    required signatory != null
    sign configurations.archives
}

release {
    preTagCommitMessage = '[ci skip] pre tag commit:'
    newVersionCommitMessage = '[ci skip] new version commit:'
}

task mergeToDevelop(type: Exec) {
    description 'Merge master to develop'
    commandLine 'git', 'merge', 'master'
}

task switchToDevelop(type: Exec) {
    description 'Checkout develop'
    commandLine 'git', 'checkout', 'develop'
}

mergeToDevelop.dependsOn switchToDevelop
updateVersion.dependsOn mergeToDevelop

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/${project.version.endsWith('-SNAPSHOT') ? 'content/repositories/snapshots' : 'service/local/staging/deploy/maven2'}") {
                authentication(userName: project.findProperty('nexusName') ?: '', password: project.findProperty('nexusPassword') ?: '')
            }

            pom.project {
                name project.name
                url 'https://github.com/saagie/gradle-saagie-plugin'
                packaging 'jar'
                description project.description

                scm {
                    url 'scm:git@github.com:saagie/gradle-saagie-plugin.git'
                    connection 'scm:git@github.com:saagie/gradle-saagie-plugin.git'
                    developerConnection 'scm:git@github.com:saagie/gradle-saagie-plugin.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id "erwan-koffi"
                        name "Erwan Koffi"
                        url "https://github.com/erwan-koffi"
                    }
                }
            }
        }
    }
}

afterReleaseBuild.dependsOn uploadArchives

nexusStaging {
    username = project.findProperty('nexusName')
    password = project.findProperty('nexusPassword')
}
